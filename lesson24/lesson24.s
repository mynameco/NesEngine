;
; File generated by cc65 v 2.16 - Git 83890e5
;
	.fopt		compiler,"cc65 v 2.16 - Git 83890e5"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "lesson24.c", 2530, 1520801495
	.dbg		file, "neslib.h", 8578, 1492006296
	.dbg		file, "lesson24.h", 1562, 1520800394
	.dbg		file, "Sprites.c", 397, 1520800965
	.forceimport	__STARTUP__
	.dbg		sym, "pal_bg", "00", extern, "_pal_bg"
	.dbg		sym, "pal_spr", "00", extern, "_pal_spr"
	.dbg		sym, "ppu_wait_nmi", "00", extern, "_ppu_wait_nmi"
	.dbg		sym, "ppu_on_all", "00", extern, "_ppu_on_all"
	.dbg		sym, "oam_clear", "00", extern, "_oam_clear"
	.dbg		sym, "oam_spr", "00", extern, "_oam_spr"
	.dbg		sym, "oam_meta_spr", "00", extern, "_oam_meta_spr"
	.dbg		sym, "bank_spr", "00", extern, "_bank_spr"
	.dbg		sym, "vram_adr", "00", extern, "_vram_adr"
	.dbg		sym, "vram_write", "00", extern, "_vram_write"
	.import		_pal_bg
	.import		_pal_spr
	.import		_ppu_wait_nmi
	.import		_ppu_on_all
	.import		_oam_clear
	.import		_oam_spr
	.import		_oam_meta_spr
	.import		_bank_spr
	.import		_vram_adr
	.import		_vram_write
	.export		_PAD_STATE
	.export		_PAD_STATE2
	.export		_PAD_STATET
	.export		_PAD_STATET2
	.export		_Y_position
	.export		_X_position
	.export		_X_position2
	.export		_X_position3
	.export		_sprid
	.export		_sprite_index
	.export		_metasprite_0_data
	.export		_metasprite_1_data
	.export		_metasprite_list
	.export		_Test
	.export		_PaletteBackgroud
	.export		_PaletteSprites
	.export		_metasprite
	.export		_main

.segment	"DATA"

_metasprite_0_data:
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$11
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$01
	.byte	$40
	.byte	$08
	.byte	$08
	.byte	$11
	.byte	$40
	.byte	$80
_metasprite_1_data:
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$12
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$13
	.byte	$00
	.byte	$10
	.byte	$08
	.byte	$12
	.byte	$40
	.byte	$00
	.byte	$10
	.byte	$22
	.byte	$00
	.byte	$08
	.byte	$10
	.byte	$23
	.byte	$00
	.byte	$10
	.byte	$10
	.byte	$22
	.byte	$40
	.byte	$80
_metasprite_list:
	.addr	_metasprite_0_data
	.addr	_metasprite_1_data
	.word	$0000
_metasprite:
	.word	$0000

.segment	"RODATA"

_Test:
	.byte	$53,$70,$72,$69,$74,$65,$73,$00
_PaletteBackgroud:
	.byte	$0F
	.byte	$00
	.byte	$10
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_PaletteSprites:
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$28
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00

.segment	"BSS"

.segment	"ZEROPAGE"
_PAD_STATE:
	.res	1,$00
_PAD_STATE2:
	.res	1,$00
_PAD_STATET:
	.res	1,$00
_PAD_STATET2:
	.res	1,$00
.segment	"BSS"
_Y_position:
	.res	1,$00
_X_position:
	.res	1,$00
_X_position2:
	.res	1,$00
_X_position3:
	.res	1,$00
_sprid:
	.res	1,$00
_sprite_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"

.segment	"CODE"

;
; pal_bg(PaletteBackgroud);
;
	.dbg	line, "lesson24.c", 42
	lda     #<(_PaletteBackgroud)
	ldx     #>(_PaletteBackgroud)
	jsr     _pal_bg
;
; pal_spr(PaletteSprites);
;
	.dbg	line, "lesson24.c", 43
	lda     #<(_PaletteSprites)
	ldx     #>(_PaletteSprites)
	jsr     _pal_spr
;
; bank_spr(1);
;
	.dbg	line, "lesson24.c", 47
	lda     #$01
	jsr     _bank_spr
;
; vram_adr(NTADR_A(7, 14)); // screen is 32 x 30 tiles
;
	.dbg	line, "lesson24.c", 52
	ldx     #$21
	lda     #$C7
	jsr     _vram_adr
;
; vram_write((unsigned char*)Test, sizeof(Test));
;
	.dbg	line, "lesson24.c", 55
	lda     #<(_Test)
	ldx     #>(_Test)
	jsr     pushax
	ldx     #$00
	lda     #$08
	jsr     _vram_write
;
; ppu_on_all();
;
	.dbg	line, "lesson24.c", 64
	jsr     _ppu_on_all
;
; Y_position = 0x80;
;
	.dbg	line, "lesson24.c", 67
	lda     #$80
	sta     _Y_position
;
; X_position = 0x88;
;
	.dbg	line, "lesson24.c", 68
	lda     #$88
	sta     _X_position
;
; X_position2 = 0xa0;
;
	.dbg	line, "lesson24.c", 69
	lda     #$A0
	sta     _X_position2
;
; X_position3 = 0xc0;
;
	.dbg	line, "lesson24.c", 70
	lda     #$C0
	sta     _X_position3
;
; sprite_index = 0;
;
	.dbg	line, "lesson24.c", 72
	lda     #$00
	sta     _sprite_index
;
; ppu_wait_nmi();
;
	.dbg	line, "lesson24.c", 78
L0073:	jsr     _ppu_wait_nmi
;
; oam_clear();
;
	.dbg	line, "lesson24.c", 81
	jsr     _oam_clear
;
; sprid = 0;
;
	.dbg	line, "lesson24.c", 84
	lda     #$00
	sta     _sprid
;
; sprid = oam_spr(X_position, Y_position, 0, 0, sprid);
;
	.dbg	line, "lesson24.c", 89
	jsr     decsp4
	lda     _X_position
	ldy     #$03
	sta     (sp),y
	lda     _Y_position
	dey
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	dey
	sta     (sp),y
	lda     _sprid
	jsr     _oam_spr
	sta     _sprid
;
; sprite_index++;
;
	.dbg	line, "lesson24.c", 91
	inc     _sprite_index
;
; metasprite = metasprite_list[sprite_index >> ANIMATION_SHIFT];
;
	.dbg	line, "lesson24.c", 92
	ldx     #$00
	lda     _sprite_index
	lsr     a
	lsr     a
	lsr     a
	stx     tmp1
	asl     a
	rol     tmp1
	clc
	adc     #<(_metasprite_list)
	sta     ptr1
	lda     tmp1
	adc     #>(_metasprite_list)
	sta     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     _metasprite
	stx     _metasprite+1
;
; if (metasprite == 0)
;
	.dbg	line, "lesson24.c", 93
	cpx     #$00
	bne     L0086
	cmp     #$00
	bne     L0086
;
; sprite_index = 0;
;
	.dbg	line, "lesson24.c", 95
	sta     _sprite_index
;
; metasprite = metasprite_list[0];
;
	.dbg	line, "lesson24.c", 96
	lda     _metasprite_list
	sta     _metasprite
	lda     _metasprite_list+1
	sta     _metasprite+1
;
; sprid = oam_meta_spr(X_position2, Y_position, sprid, metasprite);
;
	.dbg	line, "lesson24.c", 101
L0086:	jsr     decsp3
	lda     _X_position2
	ldy     #$02
	sta     (sp),y
	lda     _Y_position
	dey
	sta     (sp),y
	lda     _sprid
	dey
	sta     (sp),y
	lda     _metasprite
	ldx     _metasprite+1
	jsr     _oam_meta_spr
	sta     _sprid
;
; Y_position++;
;
	.dbg	line, "lesson24.c", 106
	inc     _Y_position
;
; while (1)
;
	.dbg	line, "lesson24.c", 75
	jmp     L0073
	.dbg	line

.endproc

